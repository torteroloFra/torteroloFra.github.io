[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "galton",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "galtonDefinitivo.html",
    "href": "galtonDefinitivo.html",
    "title": "ALTEZZA DEI FIGLI A CONFRONTO CON PADRE E MADRE",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Seleziona le colonne di interesse\nX_father = data[['Father']]  # Altezza del padre\nX_mother = data[['Mother']]   # Altezza della madre\ny = data['Height']            # Altezza del figlio\n\n# Suddividi il dataset in un set di addestramento e uno di test\nX_train_father, X_test_father, y_train, y_test = train_test_split(X_father, y, test_size=0.2, random_state=42)\nX_train_mother, X_test_mother, _, _ = train_test_split(X_mother, y, test_size=0.2, random_state=42)\n\n# Crea il modello di regressione lineare per il padre\nmodel_father = LinearRegression()\nmodel_father.fit(X_train_father, y_train)\n\n# Fai previsioni sul set di test per il padre\ny_pred_father = model_father.predict(X_test_father)\n\n# Crea il modello di regressione lineare per la madre\nmodel_mother = LinearRegression()\nmodel_mother.fit(X_train_mother, y_train)\n\n# Fai previsioni sul set di test per la madre\ny_pred_mother = model_mother.predict(X_test_mother)\n\n# Grafico per l'altezza del padre e del figlio\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father, y_test, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father, y_pred_father, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlio\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother, y_test, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother, y_pred_mother, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father = model_father.score(X_test_father, y_test)\nr2_score_mother = model_mother.score(X_test_mother, y_test)\nprint(f'R^2 (Padre): {r2_score_father}')\nprint(f'R^2 (Madre): {r2_score_mother}')\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): 0.40532932888908224\nIntercetta (Padre): 98.49626345552937\nCoefficiente angolare (Madre): 0.29275463138971997\nIntercetta (Madre): 122.08525223176318\nR^2 (Padre): 0.05139484750054535\nR^2 (Madre): 0.0504196848048305\n\n\n\nALTEZZA DEI FIGLI MASCHI A CONFRONTO CON PADRE E MADRE\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Filtra i dati per includere solo i figli maschi\ndata_male = data[data['Gender'] == 'M']\n\n# Seleziona le colonne di interesse\nX_father_male = data_male[['Father']]  # Altezza del padre\nX_mother_male = data_male[['Mother']]   # Altezza della madre\ny_male = data_male['Height']            # Altezza del figlio maschio\n\n# Suddividi il dataset in un set di addestramento e uno di test\nX_train_father_male, X_test_father_male, y_train_male, y_test_male = train_test_split(X_father_male, y_male, test_size=0.2, random_state=42)\nX_train_mother_male, X_test_mother_male, _, _ = train_test_split(X_mother_male, y_male, test_size=0.2, random_state=42)\n\n# Crea il modello di regressione lineare per il padre\nmodel_father_male = LinearRegression()\nmodel_father_male.fit(X_train_father_male, y_train_male)\n\n# Fai previsioni sul set di test per il padre\ny_pred_father_male = model_father_male.predict(X_test_father_male)\n\n# Crea il modello di regressione lineare per la madre\nmodel_mother_male = LinearRegression()\nmodel_mother_male.fit(X_train_mother_male, y_train_male)\n\n# Fai previsioni sul set di test per la madre\ny_pred_mother_male = model_mother_male.predict(X_test_mother_male)\n\n# Grafico per l'altezza del padre e del figlio maschio\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father_male, y_test_male, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father_male, y_pred_father_male, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza del Figlio Maschio vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza del Figlio Maschio (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlio maschio\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother_male, y_test_male, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother_male, y_pred_mother_male, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza del Figlio Maschio vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza del Figlio Maschio (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father_male.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father_male.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother_male.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother_male.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father_male = model_father_male.score(X_test_father_male, y_test_male)\n# Calcola e stampa il punteggio R^2 per il modello della madre\nr2_score_mother_male = model_mother_male.score(X_test_mother_male, y_test_male)\n\n# Stampa i punteggi R^2\nprint(f'Punteggio R^2 (Padre): {r2_score_father_male}')\nprint(f'Punteggio R^2 (Madre): {r2_score_mother_male}')\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): 0.4594929389093528\nIntercetta (Padre): 94.87785980604488\nCoefficiente angolare (Madre): 0.3846915405264968\nIntercetta (Madre): 113.20409440725963\nPunteggio R^2 (Padre): 0.16986733973839585\nPunteggio R^2 (Madre): 0.06842023891204596\n\n\n\n\nALTEZZA DELLE FIGLIE FEMMINE A CONFRONTO CON PADRE E MADRE\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Controlla i tipi di dati e cerca valori non numerici\nprint(data.dtypes)\n\n# Rimuovi righe con valori non numerici nelle colonne di interesse\ndata['Father'] = pd.to_numeric(data['Father'], errors='coerce')\ndata['Mother'] = pd.to_numeric(data['Mother'], errors='coerce')\ndata['Height'] = pd.to_numeric(data['Height'], errors='coerce')\n\n# Rimuovi righe con valori NaN\ndata = data.dropna()\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Filtra i dati per maschi e femmine\ndata_maschi = data[data['Gender'] == 'M'] \ndata_femmine = data[data['Gender'] == 'F']\n\ndata_maschi = data_maschi.drop(columns=['Kids'])\ndata_femmine= data_femmine.drop(columns=['Kids'])\n\n\n# Seleziona le colonne di interesse\nX_father = data[['Father']]  # Altezza del padre\nX_mother = data[['Mother']]   # Altezza della madre\ny = data[['Height']]          # Altezza generica\ny_figlio = data_maschi[['Height']]  # Altezza del figlio maschio\ny_figlia = data_femmine[['Height']]  # Altezza della figlia\n\n# Suddividi il dataset in un set di addestramento e uno di test per i maschi\nX_train_father, X_test_father, y_trainF, y_testF = train_test_split(X_father, y, test_size=0.2, random_state=42)\nX_train_mother, X_test_mother, y_trainM, y_testM = train_test_split(X_mother, y, test_size=0.2, random_state=42)\n\n# Suddividi il dataset in un set di addestramento e uno di test per le femmine\nX_train_father1, X_test_father1, y_trainF1, y_testF1 = train_test_split(X_father[data['Gender'] == 'F'], y_figlia, test_size=0.2, random_state=42)\nX_train_mother1, X_test_mother1, y_trainM1, y_testM1 = train_test_split(X_mother[data['Gender'] == 'F'], y_figlia, test_size=0.2, random_state=42)\n\n\n# Crea il modello di regressione lineare per il padre\nmodel_father = LinearRegression()\nmodel_father.fit(X_train_father, y_trainF)\n\nmodel_father1 = LinearRegression()\nmodel_father1.fit(X_train_father1, y_trainF1)\n\n# Fai previsioni sul set di test per il padre\ny_pred_father = model_father.predict(X_test_father)\ny_pred_father1 = model_father.predict(X_test_father1)\n\n# Crea il modello di regressione lineare per la madre\nmodel_mother = LinearRegression()\nmodel_mother.fit(X_train_mother, y_trainM)\n\nmodel_mother1 = LinearRegression()\nmodel_mother1.fit(X_train_mother1, y_trainM1)\n\n# Fai previsioni sul set di test per la madre\ny_pred_mother = model_mother.predict(X_test_mother)\ny_pred_mother1 = model_mother.predict(X_test_mother1)\n\n# Grafico per l'altezza del padre e del figlio\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father, y_testF, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father, y_pred_father, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlio\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother, y_testM, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother, y_pred_mother, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father = model_father.score(X_test_father, y_testF)\nr2_score_mother = model_mother.score(X_test_mother, y_testM)\nprint(f'R^2 (Padre): {r2_score_father}')\nprint(f'R^2 (Madre): {r2_score_mother}')\n\n\n\n# Grafico per l'altezza del padre e della figlia\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father1, y_testF1, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father1, y_pred_father1, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza della Figlia vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza della Figlia (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlia\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother1, y_testM1, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother1, y_pred_mother1, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza della Figlia vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza della Figlia (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father1.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father1.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother1.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother1.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father1 = model_father1.score(X_test_father1, y_testF1)\nr2_score_mother1 = model_mother1.score(X_test_mother1, y_testM1)\nprint(f'R^2 (Padre): {r2_score_father1}')\nprint(f'R^2 (Madre): {r2_score_mother1}')\n\n# Filtriamo solo le colonne numeriche per calcolare la matrice di correlazione\nnumerical_dataset = data_maschi.select_dtypes(include=[np.number])  # Seleziona solo le colonne numeriche\ncorrelation_matrix = numerical_dataset.corr()  # Calcoliamo la matrice di correlazione\n\n# Visualizziamo la matrice di correlazione con una heatmap\nplt.figure(figsize=(12, 8))  # Imposta la dimensione della figura\nsns.heatmap(correlation_matrix, annot=True, cmap=\"coolwarm\", fmt=\".2f\", linewidths=0.5)  # Heatmap con annotazioni\nplt.title(\"Correlogramma delle variabili numeriche dei figli maschi\")  # Titolo per la heatmap\nplt.show()\n\n\ndata_maschi.head()\n\n\n\n# Filtriamo solo le colonne numeriche per calcolare la matrice di correlazione\nnumerical_dataset = data_femmine.select_dtypes(include=[np.number])  # Seleziona solo le colonne numeriche\ncorrelation_matrix = numerical_dataset.corr()  # Calcoliamo la matrice di correlazione\n\n# Visualizziamo la matrice di correlazione con una heatmap\nplt.figure(figsize=(12, 8))  # Imposta la dimensione della figura\nsns.heatmap(correlation_matrix, annot=True, cmap=\"coolwarm\", fmt=\".2f\", linewidths=0.5)  # Heatmap con annotazioni\nplt.title(\"Correlogramma delle variabili numeriche dei figlie femmine\")  # Titolo per la heatmap\nplt.show()\n\ndata_femmine.head()\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\nFamily     object\nFather    float64\nMother    float64\nGender     object\nHeight    float64\nKids        int64\ndtype: object\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): [0.40532933]\nIntercetta (Padre): [98.49626346]\nCoefficiente angolare (Madre): [0.29275463]\nIntercetta (Madre): [122.08525223]\nR^2 (Padre): 0.05139484750054535\nR^2 (Madre): 0.0504196848048305\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): [0.40010135]\nIntercetta (Padre): [92.29487138]\nCoefficiente angolare (Madre): [0.32561679]\nIntercetta (Madre): [109.65247754]\nR^2 (Padre): 0.2470726727993917\nR^2 (Madre): 0.06336700925967498\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFamily\nFather\nMother\nGender\nHeight\n\n\n\n\n1\n1\n199.39\n170.18\nF\n175.768\n\n\n2\n1\n199.39\n170.18\nF\n175.260\n\n\n3\n1\n199.39\n170.18\nF\n175.260\n\n\n6\n2\n191.77\n168.91\nF\n166.370\n\n\n7\n2\n191.77\n168.91\nF\n166.370\n\n\n\n\n\n\n\n\n\nALTEZZA DELLE FIGLIE E DEI FIGLI A CONFRONTO CON I GENITORI\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # Aggiunto import per Seaborn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Crea la colonna con l'altezza media dei genitori\ndata[\"Parents_avg_cm\"] = (data[\"Father\"] + data[\"Mother\"]) / 2\n\n# Separa i dati in figli maschi e figlie femmine\ndf_male = data[data[\"Gender\"] == \"M\"]   # Filtra solo i figli maschi\ndf_female = data[data[\"Gender\"] == \"F\"]  # Filtra solo le figlie femmine\n\n# Creare il secondo grafico con una sola linea di regressione per le figlie femmine\nplt.figure(figsize=(12, 5))\n\n# Primo grafico: Figli maschi vs Altezza media genitori\nplt.subplot(1, 2, 1)\nsns.regplot(x=df_male[\"Parents_avg_cm\"], y=df_male[\"Height\"], scatter_kws={\"alpha\": 0.5}, line_kws={\"color\": \"red\"})\nplt.xlabel(\"Altezza media genitori (cm)\")\nplt.ylabel(\"Altezza figli maschi (cm)\")\nplt.title(\"Regressione: Figli maschi vs Altezza media genitori\")\n\n# Secondo grafico: Figlie femmine vs Altezza media genitori\nplt.subplot(1, 2, 2)\nsns.regplot(x=df_female[\"Parents_avg_cm\"], y=df_female[\"Height\"], scatter_kws={\"alpha\": 0.5}, line_kws={\"color\": \"purple\"})\nplt.xlabel(\"Altezza media genitori (cm)\")\nplt.ylabel(\"Altezza figlie femmine (cm)\")\nplt.title(\"Regressione: Figlie femmine vs Altezza media genitori\")\n\n# Mostrare i grafici\nplt.tight_layout()\nplt.show()\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\n\n\n\n\n\n\n\n\n\n\naltezzeFigli = data[\"Height\"]\naltezzeFigli\n\n0      185.928\n1      175.768\n2      175.260\n3      175.260\n4      186.690\n        ...   \n893    173.990\n894    171.958\n895    162.560\n896    161.290\n897    160.020\nName: Height, Length: 898, dtype: float64\n\n\n\nintervalli = np.linspace(140, 200, 13)\n\nfig, ax = plt.subplots(figsize=(3,3))\nfig.set_facecolor(\"white\")\nax.set_facecolor(\"#C9DAEA\")\nax.hist(altezzeFigli, bins = intervalli, color = \"#688E26\", edgecolor=\"#A63C06\")\nax.set_xlabel(\"Altezza\", color =\"#012622\")\nax.set_ylabel(\"Frequenza assoluta\", color =\"#012622\")\n\nax.set_title(\"distribuzione delle altezza\", color =\"#012622\")\n\n\nplt.show()"
  },
  {
    "objectID": "posts/galtonDefinitivo.html",
    "href": "posts/galtonDefinitivo.html",
    "title": "ALTEZZA DEI FIGLI A CONFRONTO CON PADRE E MADRE",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Seleziona le colonne di interesse\nX_father = data[['Father']]  # Altezza del padre\nX_mother = data[['Mother']]   # Altezza della madre\ny = data['Height']            # Altezza del figlio\n\n# Suddividi il dataset in un set di addestramento e uno di test\nX_train_father, X_test_father, y_train, y_test = train_test_split(X_father, y, test_size=0.2, random_state=42)\nX_train_mother, X_test_mother, _, _ = train_test_split(X_mother, y, test_size=0.2, random_state=42)\n\n# Crea il modello di regressione lineare per il padre\nmodel_father = LinearRegression()\nmodel_father.fit(X_train_father, y_train)\n\n# Fai previsioni sul set di test per il padre\ny_pred_father = model_father.predict(X_test_father)\n\n# Crea il modello di regressione lineare per la madre\nmodel_mother = LinearRegression()\nmodel_mother.fit(X_train_mother, y_train)\n\n# Fai previsioni sul set di test per la madre\ny_pred_mother = model_mother.predict(X_test_mother)\n\n# Grafico per l'altezza del padre e del figlio\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father, y_test, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father, y_pred_father, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlio\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother, y_test, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother, y_pred_mother, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father = model_father.score(X_test_father, y_test)\nr2_score_mother = model_mother.score(X_test_mother, y_test)\nprint(f'R^2 (Padre): {r2_score_father}')\nprint(f'R^2 (Madre): {r2_score_mother}')\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): 0.40532932888908224\nIntercetta (Padre): 98.49626345552937\nCoefficiente angolare (Madre): 0.29275463138971997\nIntercetta (Madre): 122.08525223176318\nR^2 (Padre): 0.05139484750054535\nR^2 (Madre): 0.0504196848048305\n\n\n\nALTEZZA DEI FIGLI MASCHI A CONFRONTO CON PADRE E MADRE\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Filtra i dati per includere solo i figli maschi\ndata_male = data[data['Gender'] == 'M']\n\n# Seleziona le colonne di interesse\nX_father_male = data_male[['Father']]  # Altezza del padre\nX_mother_male = data_male[['Mother']]   # Altezza della madre\ny_male = data_male['Height']            # Altezza del figlio maschio\n\n# Suddividi il dataset in un set di addestramento e uno di test\nX_train_father_male, X_test_father_male, y_train_male, y_test_male = train_test_split(X_father_male, y_male, test_size=0.2, random_state=42)\nX_train_mother_male, X_test_mother_male, _, _ = train_test_split(X_mother_male, y_male, test_size=0.2, random_state=42)\n\n# Crea il modello di regressione lineare per il padre\nmodel_father_male = LinearRegression()\nmodel_father_male.fit(X_train_father_male, y_train_male)\n\n# Fai previsioni sul set di test per il padre\ny_pred_father_male = model_father_male.predict(X_test_father_male)\n\n# Crea il modello di regressione lineare per la madre\nmodel_mother_male = LinearRegression()\nmodel_mother_male.fit(X_train_mother_male, y_train_male)\n\n# Fai previsioni sul set di test per la madre\ny_pred_mother_male = model_mother_male.predict(X_test_mother_male)\n\n# Grafico per l'altezza del padre e del figlio maschio\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father_male, y_test_male, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father_male, y_pred_father_male, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza del Figlio Maschio vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza del Figlio Maschio (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlio maschio\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother_male, y_test_male, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother_male, y_pred_mother_male, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza del Figlio Maschio vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza del Figlio Maschio (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father_male.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father_male.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother_male.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother_male.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father_male = model_father_male.score(X_test_father_male, y_test_male)\n# Calcola e stampa il punteggio R^2 per il modello della madre\nr2_score_mother_male = model_mother_male.score(X_test_mother_male, y_test_male)\n\n# Stampa i punteggi R^2\nprint(f'Punteggio R^2 (Padre): {r2_score_father_male}')\nprint(f'Punteggio R^2 (Madre): {r2_score_mother_male}')\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): 0.4594929389093528\nIntercetta (Padre): 94.87785980604488\nCoefficiente angolare (Madre): 0.3846915405264968\nIntercetta (Madre): 113.20409440725963\nPunteggio R^2 (Padre): 0.16986733973839585\nPunteggio R^2 (Madre): 0.06842023891204596\n\n\n\n\nALTEZZA DELLE FIGLIE FEMMINE A CONFRONTO CON PADRE E MADRE\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Controlla i tipi di dati e cerca valori non numerici\nprint(data.dtypes)\n\n# Rimuovi righe con valori non numerici nelle colonne di interesse\ndata['Father'] = pd.to_numeric(data['Father'], errors='coerce')\ndata['Mother'] = pd.to_numeric(data['Mother'], errors='coerce')\ndata['Height'] = pd.to_numeric(data['Height'], errors='coerce')\n\n# Rimuovi righe con valori NaN\ndata = data.dropna()\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Filtra i dati per maschi e femmine\ndata_maschi = data[data['Gender'] == 'M'] \ndata_femmine = data[data['Gender'] == 'F']\n\ndata_maschi = data_maschi.drop(columns=['Kids'])\ndata_femmine= data_femmine.drop(columns=['Kids'])\n\n\n# Seleziona le colonne di interesse\nX_father = data[['Father']]  # Altezza del padre\nX_mother = data[['Mother']]   # Altezza della madre\ny = data[['Height']]          # Altezza generica\ny_figlio = data_maschi[['Height']]  # Altezza del figlio maschio\ny_figlia = data_femmine[['Height']]  # Altezza della figlia\n\n# Suddividi il dataset in un set di addestramento e uno di test per i maschi\nX_train_father, X_test_father, y_trainF, y_testF = train_test_split(X_father, y, test_size=0.2, random_state=42)\nX_train_mother, X_test_mother, y_trainM, y_testM = train_test_split(X_mother, y, test_size=0.2, random_state=42)\n\n# Suddividi il dataset in un set di addestramento e uno di test per le femmine\nX_train_father1, X_test_father1, y_trainF1, y_testF1 = train_test_split(X_father[data['Gender'] == 'F'], y_figlia, test_size=0.2, random_state=42)\nX_train_mother1, X_test_mother1, y_trainM1, y_testM1 = train_test_split(X_mother[data['Gender'] == 'F'], y_figlia, test_size=0.2, random_state=42)\n\n\n# Crea il modello di regressione lineare per il padre\nmodel_father = LinearRegression()\nmodel_father.fit(X_train_father, y_trainF)\n\nmodel_father1 = LinearRegression()\nmodel_father1.fit(X_train_father1, y_trainF1)\n\n# Fai previsioni sul set di test per il padre\ny_pred_father = model_father.predict(X_test_father)\ny_pred_father1 = model_father.predict(X_test_father1)\n\n# Crea il modello di regressione lineare per la madre\nmodel_mother = LinearRegression()\nmodel_mother.fit(X_train_mother, y_trainM)\n\nmodel_mother1 = LinearRegression()\nmodel_mother1.fit(X_train_mother1, y_trainM1)\n\n# Fai previsioni sul set di test per la madre\ny_pred_mother = model_mother.predict(X_test_mother)\ny_pred_mother1 = model_mother.predict(X_test_mother1)\n\n# Grafico per l'altezza del padre e del figlio\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father, y_testF, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father, y_pred_father, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlio\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother, y_testM, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother, y_pred_mother, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza del Figlio vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza del Figlio (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father = model_father.score(X_test_father, y_testF)\nr2_score_mother = model_mother.score(X_test_mother, y_testM)\nprint(f'R^2 (Padre): {r2_score_father}')\nprint(f'R^2 (Madre): {r2_score_mother}')\n\n\n\n# Grafico per l'altezza del padre e della figlia\nplt.figure(figsize=(12, 5))\n\nplt.subplot(1, 2, 1)  # Due grafici in una riga, primo grafico\nplt.scatter(X_test_father1, y_testF1, color='blue', label='Dati reali (Padre)')\nplt.plot(X_test_father1, y_pred_father1, color='red', linewidth=2, label='Predizione (Padre)')\nplt.title('Regressione Lineare: Altezza della Figlia vs Altezza del Padre')\nplt.xlabel('Altezza del Padre (in cm)')\nplt.ylabel('Altezza della Figlia (in cm)')\nplt.legend()\n\n# Grafico per l'altezza della madre e del figlia\nplt.subplot(1, 2, 2)  # Secondo grafico\nplt.scatter(X_test_mother1, y_testM1, color='green', label='Dati reali (Madre)')\nplt.plot(X_test_mother1, y_pred_mother1, color='orange', linewidth=2, label='Predizione (Madre)')\nplt.title('Regressione Lineare: Altezza della Figlia vs Altezza della Madre')\nplt.xlabel('Altezza della Madre (in cm)')\nplt.ylabel('Altezza della Figlia (in cm)')\nplt.legend()\n\nplt.tight_layout()  # Ottimizza il layout\nplt.show()\n\n# Stampa i coefficienti del modello\nprint(f'Coefficiente angolare (Padre): {model_father1.coef_[0]}')\nprint(f'Intercetta (Padre): {model_father1.intercept_}')\nprint(f'Coefficiente angolare (Madre): {model_mother1.coef_[0]}')\nprint(f'Intercetta (Madre): {model_mother1.intercept_}')\n\n# Calcola e stampa il punteggio R^2\nr2_score_father1 = model_father1.score(X_test_father1, y_testF1)\nr2_score_mother1 = model_mother1.score(X_test_mother1, y_testM1)\nprint(f'R^2 (Padre): {r2_score_father1}')\nprint(f'R^2 (Madre): {r2_score_mother1}')\n\n# Filtriamo solo le colonne numeriche per calcolare la matrice di correlazione\nnumerical_dataset = data_maschi.select_dtypes(include=[np.number])  # Seleziona solo le colonne numeriche\ncorrelation_matrix = numerical_dataset.corr()  # Calcoliamo la matrice di correlazione\n\n# Visualizziamo la matrice di correlazione con una heatmap\nplt.figure(figsize=(12, 8))  # Imposta la dimensione della figura\nsns.heatmap(correlation_matrix, annot=True, cmap=\"coolwarm\", fmt=\".2f\", linewidths=0.5)  # Heatmap con annotazioni\nplt.title(\"Correlogramma delle variabili numeriche dei figli maschi\")  # Titolo per la heatmap\nplt.show()\n\n\ndata_maschi.head()\n\n\n\n# Filtriamo solo le colonne numeriche per calcolare la matrice di correlazione\nnumerical_dataset = data_femmine.select_dtypes(include=[np.number])  # Seleziona solo le colonne numeriche\ncorrelation_matrix = numerical_dataset.corr()  # Calcoliamo la matrice di correlazione\n\n# Visualizziamo la matrice di correlazione con una heatmap\nplt.figure(figsize=(12, 8))  # Imposta la dimensione della figura\nsns.heatmap(correlation_matrix, annot=True, cmap=\"coolwarm\", fmt=\".2f\", linewidths=0.5)  # Heatmap con annotazioni\nplt.title(\"Correlogramma delle variabili numeriche dei figlie femmine\")  # Titolo per la heatmap\nplt.show()\n\ndata_femmine.head()\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\nFamily     object\nFather    float64\nMother    float64\nGender     object\nHeight    float64\nKids        int64\ndtype: object\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): [0.40532933]\nIntercetta (Padre): [98.49626346]\nCoefficiente angolare (Madre): [0.29275463]\nIntercetta (Madre): [122.08525223]\nR^2 (Padre): 0.05139484750054535\nR^2 (Madre): 0.0504196848048305\n\n\n\n\n\n\n\n\n\nCoefficiente angolare (Padre): [0.40010135]\nIntercetta (Padre): [92.29487138]\nCoefficiente angolare (Madre): [0.32561679]\nIntercetta (Madre): [109.65247754]\nR^2 (Padre): 0.2470726727993917\nR^2 (Madre): 0.06336700925967498\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFamily\nFather\nMother\nGender\nHeight\n\n\n\n\n1\n1\n199.39\n170.18\nF\n175.768\n\n\n2\n1\n199.39\n170.18\nF\n175.260\n\n\n3\n1\n199.39\n170.18\nF\n175.260\n\n\n6\n2\n191.77\n168.91\nF\n166.370\n\n\n7\n2\n191.77\n168.91\nF\n166.370\n\n\n\n\n\n\n\n\n\nALTEZZA DELLE FIGLIE E DEI FIGLI A CONFRONTO CON I GENITORI\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns  # Aggiunto import per Seaborn\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\n\n# Carica il dataset di Galton\ndata = pd.read_csv('./galton.csv')\n\n# Visualizza le prime righe del dataset\nprint(data.head())\n\n# Converti le altezze da pollici a centimetri\ndata['Father'] = data['Father'] * 2.54  # Altezza del padre in cm\ndata['Mother'] = data['Mother'] * 2.54  # Altezza della madre in cm\ndata['Height'] = data['Height'] * 2.54   # Altezza del figlio in cm\n\n# Crea la colonna con l'altezza media dei genitori\ndata[\"Parents_avg_cm\"] = (data[\"Father\"] + data[\"Mother\"]) / 2\n\n# Separa i dati in figli maschi e figlie femmine\ndf_male = data[data[\"Gender\"] == \"M\"]   # Filtra solo i figli maschi\ndf_female = data[data[\"Gender\"] == \"F\"]  # Filtra solo le figlie femmine\n\n# Creare il secondo grafico con una sola linea di regressione per le figlie femmine\nplt.figure(figsize=(12, 5))\n\n# Primo grafico: Figli maschi vs Altezza media genitori\nplt.subplot(1, 2, 1)\nsns.regplot(x=df_male[\"Parents_avg_cm\"], y=df_male[\"Height\"], scatter_kws={\"alpha\": 0.5}, line_kws={\"color\": \"red\"})\nplt.xlabel(\"Altezza media genitori (cm)\")\nplt.ylabel(\"Altezza figli maschi (cm)\")\nplt.title(\"Regressione: Figli maschi vs Altezza media genitori\")\n\n# Secondo grafico: Figlie femmine vs Altezza media genitori\nplt.subplot(1, 2, 2)\nsns.regplot(x=df_female[\"Parents_avg_cm\"], y=df_female[\"Height\"], scatter_kws={\"alpha\": 0.5}, line_kws={\"color\": \"purple\"})\nplt.xlabel(\"Altezza media genitori (cm)\")\nplt.ylabel(\"Altezza figlie femmine (cm)\")\nplt.title(\"Regressione: Figlie femmine vs Altezza media genitori\")\n\n# Mostrare i grafici\nplt.tight_layout()\nplt.show()\n\n  Family  Father  Mother Gender  Height  Kids\n0      1    78.5    67.0      M    73.2     4\n1      1    78.5    67.0      F    69.2     4\n2      1    78.5    67.0      F    69.0     4\n3      1    78.5    67.0      F    69.0     4\n4      2    75.5    66.5      M    73.5     4\n\n\n\n\n\n\n\n\n\n\naltezzeFigli = data[\"Height\"]\naltezzeFigli\n\n0      185.928\n1      175.768\n2      175.260\n3      175.260\n4      186.690\n        ...   \n893    173.990\n894    171.958\n895    162.560\n896    161.290\n897    160.020\nName: Height, Length: 898, dtype: float64\n\n\n\nintervalli = np.linspace(140, 200, 13)\n\nfig, ax = plt.subplots(figsize=(3,3))\nfig.set_facecolor(\"white\")\nax.set_facecolor(\"#C9DAEA\")\nax.hist(altezzeFigli, bins = intervalli, color = \"#688E26\", edgecolor=\"#A63C06\")\nax.set_xlabel(\"Altezza\", color =\"#012622\")\nax.set_ylabel(\"Frequenza assoluta\", color =\"#012622\")\n\nax.set_title(\"distribuzione delle altezza\", color =\"#012622\")\n\n\nplt.show()"
  }
]